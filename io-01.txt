

pip install --upgrade coinapi_rest_v1


from coinapi_rest_v1.restapi import CoinAPIv1
import datetime, sys

test_key = sys.argv[1]

api = CoinAPIv1('3BFA0F2E-078D-4F26-ACB5-19B2E30D2764')
exchanges = api.metadata_list_exchanges()

print('Exchanges')
for exchange in exchanges:
    print('Exchange ID: %s' % exchange['exchange_id'])
    print('Exchange website: %s' % exchange['website'])
    print('Exchange name: %s' % exchange['name'])

assets = api.metadata_list_assets()
print('Assets')
for asset in assets:
    print('Asset ID: %s' % asset['asset_id'])
    try:
        print('Asset name: %s' % asset['name'])
    except KeyError:
        print('Can not find name')
    print('Asset type (crypto?): %s' % asset['type_is_crypto'])

symbols = api.metadata_list_symbols()
print('Symbols')
for symbol in symbols:
    print('Symbol ID: %s' % symbol['symbol_id'])
    print('Exchange ID: %s' % symbol['exchange_id'])
    print('Symbol type: %s' % symbol['symbol_type'])
    try:
        print('Asset ID base: %s' % symbol['asset_id_base'])
    except KeyError:
        print('Can not find Asset ID base')
    try:
        print('Asset ID quote: %s' % symbol['asset_id_quote'])
    except KeyError:
        print('Can not find Asset ID quote')

    if (symbol['symbol_type'] == 'FUTURES'):
        print('Future delivery time: %s' % symbol['future_delivery_time'])

    if (symbol['symbol_type'] == 'OPTION'):
        print('Option type is call: %s' % symbol['option_type_is_call'])
        print('Option strike price: %s' % symbol['option_strike_price'])
        print('Option contract unit: %s' % symbol['option_contract_unit'])
        print('Option exercise style: %s' % symbol['option_exercise_style'])
        print('Option expiration time: %s' % symbol['option_expiration_time'])

### btc rates current

exchange_rate = api.exchange_rates_get_specific_rate('BTC', 'USD')
print('Time: %s' % exchange_rate['time'])
print('Base: %s' % exchange_rate['asset_id_base'])
print('Quote: %s' % exchange_rate['asset_id_quote'])
print('Rate: %s' % exchange_rate['rate'])

current_rates = api.exchange_rates_get_all_current_rates('BTC')

print("Asset ID Base: %s" % current_rates['asset_id_base'])
for rate in current_rates['rates']:
    print('Time: %s' % rate['time'])
    print('Quote: %s' % rate['asset_id_quote'])
    print('Rate: %s' % rate['rate'])
